/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.model;


import java.lang.reflect.Type;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;
import jakarta.json.bind.annotation.JsonbProperty;


public class MatchDamageWeaponAssets  {
  
  @JsonbProperty("display_icon")
  private String displayIcon;

  @JsonbProperty("killfeed_icon")
  private String killfeedIcon;

 /**
   * Get displayIcon
   * @return displayIcon
  **/
  public String getDisplayIcon() {
    return displayIcon;
  }

  /**
    * Set displayIcon
  **/
  public void setDisplayIcon(String displayIcon) {
    this.displayIcon = displayIcon;
  }

  public MatchDamageWeaponAssets displayIcon(String displayIcon) {
    this.displayIcon = displayIcon;
    return this;
  }

 /**
   * Get killfeedIcon
   * @return killfeedIcon
  **/
  public String getKillfeedIcon() {
    return killfeedIcon;
  }

  /**
    * Set killfeedIcon
  **/
  public void setKillfeedIcon(String killfeedIcon) {
    this.killfeedIcon = killfeedIcon;
  }

  public MatchDamageWeaponAssets killfeedIcon(String killfeedIcon) {
    this.killfeedIcon = killfeedIcon;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchDamageWeaponAssets {\n");
    
    sb.append("    displayIcon: ").append(toIndentedString(displayIcon)).append("\n");
    sb.append("    killfeedIcon: ").append(toIndentedString(killfeedIcon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

