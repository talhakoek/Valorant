/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.model;

import com.talhakoek.valorant.model.ModeIds;
import com.talhakoek.valorant.model.Modes;
import com.talhakoek.valorant.model.Platforms;
import com.talhakoek.valorant.model.V1QueueStatusGameRules;
import com.talhakoek.valorant.model.V1QueueStatusHighSkill;
import com.talhakoek.valorant.model.V1QueueStatusMaps;
import com.talhakoek.valorant.model.V1QueueStatusPartySize;
import com.talhakoek.valorant.model.V1QueueStatusSkillDisparity;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import java.lang.reflect.Type;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;
import jakarta.json.bind.annotation.JsonbProperty;


public class V1QueueStatusData  {
  
  @JsonbProperty("mode")
  private Modes mode;

  @JsonbProperty("mode_id")
  private ModeIds modeId;

  @JsonbProperty("enabled")
  private Boolean enabled;

  @JsonbProperty("team_size")
  private BigDecimal teamSize;

  @JsonbProperty("number_of_teams")
  private BigDecimal numberOfTeams;

  @JsonbProperty("party_size")
  private V1QueueStatusPartySize partySize;

  @JsonbProperty("high_skill")
  private V1QueueStatusHighSkill highSkill;

  @JsonbProperty("ranked")
  private Boolean ranked;

  @JsonbProperty("tournament")
  private Boolean tournament;

  @JsonbProperty("skill_disparity")
  private List<V1QueueStatusSkillDisparity> skillDisparity = null;

  @JsonbProperty("required_account_level")
  private BigDecimal requiredAccountLevel;

  @JsonbProperty("game_rules")
  private V1QueueStatusGameRules gameRules;

  @JsonbProperty("platforms")
  private List<Platforms> platforms = null;

  @JsonbProperty("maps")
  private List<V1QueueStatusMaps> maps = null;

 /**
   * Get mode
   * @return mode
  **/
  public Modes getMode() {
    return mode;
  }

  /**
    * Set mode
  **/
  public void setMode(Modes mode) {
    this.mode = mode;
  }

  public V1QueueStatusData mode(Modes mode) {
    this.mode = mode;
    return this;
  }

 /**
   * Get modeId
   * @return modeId
  **/
  public ModeIds getModeId() {
    return modeId;
  }

  /**
    * Set modeId
  **/
  public void setModeId(ModeIds modeId) {
    this.modeId = modeId;
  }

  public V1QueueStatusData modeId(ModeIds modeId) {
    this.modeId = modeId;
    return this;
  }

 /**
   * Get enabled
   * @return enabled
  **/
  public Boolean getEnabled() {
    return enabled;
  }

  /**
    * Set enabled
  **/
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public V1QueueStatusData enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

 /**
   * Get teamSize
   * @return teamSize
  **/
  public BigDecimal getTeamSize() {
    return teamSize;
  }

  /**
    * Set teamSize
  **/
  public void setTeamSize(BigDecimal teamSize) {
    this.teamSize = teamSize;
  }

  public V1QueueStatusData teamSize(BigDecimal teamSize) {
    this.teamSize = teamSize;
    return this;
  }

 /**
   * Get numberOfTeams
   * @return numberOfTeams
  **/
  public BigDecimal getNumberOfTeams() {
    return numberOfTeams;
  }

  /**
    * Set numberOfTeams
  **/
  public void setNumberOfTeams(BigDecimal numberOfTeams) {
    this.numberOfTeams = numberOfTeams;
  }

  public V1QueueStatusData numberOfTeams(BigDecimal numberOfTeams) {
    this.numberOfTeams = numberOfTeams;
    return this;
  }

 /**
   * Get partySize
   * @return partySize
  **/
  public V1QueueStatusPartySize getPartySize() {
    return partySize;
  }

  /**
    * Set partySize
  **/
  public void setPartySize(V1QueueStatusPartySize partySize) {
    this.partySize = partySize;
  }

  public V1QueueStatusData partySize(V1QueueStatusPartySize partySize) {
    this.partySize = partySize;
    return this;
  }

 /**
   * Get highSkill
   * @return highSkill
  **/
  public V1QueueStatusHighSkill getHighSkill() {
    return highSkill;
  }

  /**
    * Set highSkill
  **/
  public void setHighSkill(V1QueueStatusHighSkill highSkill) {
    this.highSkill = highSkill;
  }

  public V1QueueStatusData highSkill(V1QueueStatusHighSkill highSkill) {
    this.highSkill = highSkill;
    return this;
  }

 /**
   * Get ranked
   * @return ranked
  **/
  public Boolean getRanked() {
    return ranked;
  }

  /**
    * Set ranked
  **/
  public void setRanked(Boolean ranked) {
    this.ranked = ranked;
  }

  public V1QueueStatusData ranked(Boolean ranked) {
    this.ranked = ranked;
    return this;
  }

 /**
   * Get tournament
   * @return tournament
  **/
  public Boolean getTournament() {
    return tournament;
  }

  /**
    * Set tournament
  **/
  public void setTournament(Boolean tournament) {
    this.tournament = tournament;
  }

  public V1QueueStatusData tournament(Boolean tournament) {
    this.tournament = tournament;
    return this;
  }

 /**
   * Get skillDisparity
   * @return skillDisparity
  **/
  public List<V1QueueStatusSkillDisparity> getSkillDisparity() {
    return skillDisparity;
  }

  /**
    * Set skillDisparity
  **/
  public void setSkillDisparity(List<V1QueueStatusSkillDisparity> skillDisparity) {
    this.skillDisparity = skillDisparity;
  }

  public V1QueueStatusData skillDisparity(List<V1QueueStatusSkillDisparity> skillDisparity) {
    this.skillDisparity = skillDisparity;
    return this;
  }

  public V1QueueStatusData addSkillDisparityItem(V1QueueStatusSkillDisparity skillDisparityItem) {
    this.skillDisparity.add(skillDisparityItem);
    return this;
  }

 /**
   * Get requiredAccountLevel
   * @return requiredAccountLevel
  **/
  public BigDecimal getRequiredAccountLevel() {
    return requiredAccountLevel;
  }

  /**
    * Set requiredAccountLevel
  **/
  public void setRequiredAccountLevel(BigDecimal requiredAccountLevel) {
    this.requiredAccountLevel = requiredAccountLevel;
  }

  public V1QueueStatusData requiredAccountLevel(BigDecimal requiredAccountLevel) {
    this.requiredAccountLevel = requiredAccountLevel;
    return this;
  }

 /**
   * Get gameRules
   * @return gameRules
  **/
  public V1QueueStatusGameRules getGameRules() {
    return gameRules;
  }

  /**
    * Set gameRules
  **/
  public void setGameRules(V1QueueStatusGameRules gameRules) {
    this.gameRules = gameRules;
  }

  public V1QueueStatusData gameRules(V1QueueStatusGameRules gameRules) {
    this.gameRules = gameRules;
    return this;
  }

 /**
   * Get platforms
   * @return platforms
  **/
  public List<Platforms> getPlatforms() {
    return platforms;
  }

  /**
    * Set platforms
  **/
  public void setPlatforms(List<Platforms> platforms) {
    this.platforms = platforms;
  }

  public V1QueueStatusData platforms(List<Platforms> platforms) {
    this.platforms = platforms;
    return this;
  }

  public V1QueueStatusData addPlatformsItem(Platforms platformsItem) {
    this.platforms.add(platformsItem);
    return this;
  }

 /**
   * Get maps
   * @return maps
  **/
  public List<V1QueueStatusMaps> getMaps() {
    return maps;
  }

  /**
    * Set maps
  **/
  public void setMaps(List<V1QueueStatusMaps> maps) {
    this.maps = maps;
  }

  public V1QueueStatusData maps(List<V1QueueStatusMaps> maps) {
    this.maps = maps;
    return this;
  }

  public V1QueueStatusData addMapsItem(V1QueueStatusMaps mapsItem) {
    this.maps.add(mapsItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1QueueStatusData {\n");
    
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    modeId: ").append(toIndentedString(modeId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    teamSize: ").append(toIndentedString(teamSize)).append("\n");
    sb.append("    numberOfTeams: ").append(toIndentedString(numberOfTeams)).append("\n");
    sb.append("    partySize: ").append(toIndentedString(partySize)).append("\n");
    sb.append("    highSkill: ").append(toIndentedString(highSkill)).append("\n");
    sb.append("    ranked: ").append(toIndentedString(ranked)).append("\n");
    sb.append("    tournament: ").append(toIndentedString(tournament)).append("\n");
    sb.append("    skillDisparity: ").append(toIndentedString(skillDisparity)).append("\n");
    sb.append("    requiredAccountLevel: ").append(toIndentedString(requiredAccountLevel)).append("\n");
    sb.append("    gameRules: ").append(toIndentedString(gameRules)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    maps: ").append(toIndentedString(maps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

