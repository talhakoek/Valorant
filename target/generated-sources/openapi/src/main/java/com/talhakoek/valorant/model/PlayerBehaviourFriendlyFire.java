/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.model;


import java.lang.reflect.Type;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;
import jakarta.json.bind.annotation.JsonbProperty;


public class PlayerBehaviourFriendlyFire  {
  
  @JsonbProperty("incoming")
  private Integer incoming;

  @JsonbProperty("outgoing")
  private Integer outgoing;

 /**
   * Get incoming
   * @return incoming
  **/
  public Integer getIncoming() {
    return incoming;
  }

  /**
    * Set incoming
  **/
  public void setIncoming(Integer incoming) {
    this.incoming = incoming;
  }

  public PlayerBehaviourFriendlyFire incoming(Integer incoming) {
    this.incoming = incoming;
    return this;
  }

 /**
   * Get outgoing
   * @return outgoing
  **/
  public Integer getOutgoing() {
    return outgoing;
  }

  /**
    * Set outgoing
  **/
  public void setOutgoing(Integer outgoing) {
    this.outgoing = outgoing;
  }

  public PlayerBehaviourFriendlyFire outgoing(Integer outgoing) {
    this.outgoing = outgoing;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerBehaviourFriendlyFire {\n");
    
    sb.append("    incoming: ").append(toIndentedString(incoming)).append("\n");
    sb.append("    outgoing: ").append(toIndentedString(outgoing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

