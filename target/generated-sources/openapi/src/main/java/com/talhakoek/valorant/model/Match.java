/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.model;

import com.talhakoek.valorant.model.Coach;
import com.talhakoek.valorant.model.MatchMetadata;
import com.talhakoek.valorant.model.MatchPlayers;
import com.talhakoek.valorant.model.MatchRounds;
import com.talhakoek.valorant.model.MatchTeams;
import com.talhakoek.valorant.model.Observer;
import java.util.ArrayList;
import java.util.List;

import java.lang.reflect.Type;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;
import jakarta.json.bind.annotation.JsonbProperty;


public class Match  {
  
  @JsonbProperty("metadata")
  private MatchMetadata metadata;

  @JsonbProperty("players")
  private MatchPlayers players;

  @JsonbProperty("observers")
  private List<Observer> observers = null;

  @JsonbProperty("coaches")
  private List<Coach> coaches = null;

  @JsonbProperty("teams")
  private MatchTeams teams;

  @JsonbProperty("rounds")
  private List<MatchRounds> rounds = null;

 /**
   * Get metadata
   * @return metadata
  **/
  public MatchMetadata getMetadata() {
    return metadata;
  }

  /**
    * Set metadata
  **/
  public void setMetadata(MatchMetadata metadata) {
    this.metadata = metadata;
  }

  public Match metadata(MatchMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

 /**
   * Get players
   * @return players
  **/
  public MatchPlayers getPlayers() {
    return players;
  }

  /**
    * Set players
  **/
  public void setPlayers(MatchPlayers players) {
    this.players = players;
  }

  public Match players(MatchPlayers players) {
    this.players = players;
    return this;
  }

 /**
   * Get observers
   * @return observers
  **/
  public List<Observer> getObservers() {
    return observers;
  }

  /**
    * Set observers
  **/
  public void setObservers(List<Observer> observers) {
    this.observers = observers;
  }

  public Match observers(List<Observer> observers) {
    this.observers = observers;
    return this;
  }

  public Match addObserversItem(Observer observersItem) {
    this.observers.add(observersItem);
    return this;
  }

 /**
   * Get coaches
   * @return coaches
  **/
  public List<Coach> getCoaches() {
    return coaches;
  }

  /**
    * Set coaches
  **/
  public void setCoaches(List<Coach> coaches) {
    this.coaches = coaches;
  }

  public Match coaches(List<Coach> coaches) {
    this.coaches = coaches;
    return this;
  }

  public Match addCoachesItem(Coach coachesItem) {
    this.coaches.add(coachesItem);
    return this;
  }

 /**
   * Get teams
   * @return teams
  **/
  public MatchTeams getTeams() {
    return teams;
  }

  /**
    * Set teams
  **/
  public void setTeams(MatchTeams teams) {
    this.teams = teams;
  }

  public Match teams(MatchTeams teams) {
    this.teams = teams;
    return this;
  }

 /**
   * Get rounds
   * @return rounds
  **/
  public List<MatchRounds> getRounds() {
    return rounds;
  }

  /**
    * Set rounds
  **/
  public void setRounds(List<MatchRounds> rounds) {
    this.rounds = rounds;
  }

  public Match rounds(List<MatchRounds> rounds) {
    this.rounds = rounds;
    return this;
  }

  public Match addRoundsItem(MatchRounds roundsItem) {
    this.rounds.add(roundsItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Match {\n");
    
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    players: ").append(toIndentedString(players)).append("\n");
    sb.append("    observers: ").append(toIndentedString(observers)).append("\n");
    sb.append("    coaches: ").append(toIndentedString(coaches)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    rounds: ").append(toIndentedString(rounds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

