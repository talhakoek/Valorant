/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.model;


import java.lang.reflect.Type;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;
import jakarta.json.bind.annotation.JsonbProperty;


public class PlayerStats  {
  
  @JsonbProperty("score")
  private Integer score;

  @JsonbProperty("kills")
  private Integer kills;

  @JsonbProperty("deaths")
  private Integer deaths;

  @JsonbProperty("assists")
  private Integer assists;

  @JsonbProperty("bodyshots")
  private Integer bodyshots;

  @JsonbProperty("headshots")
  private Integer headshots;

  @JsonbProperty("legshots")
  private Integer legshots;

 /**
   * Get score
   * @return score
  **/
  public Integer getScore() {
    return score;
  }

  /**
    * Set score
  **/
  public void setScore(Integer score) {
    this.score = score;
  }

  public PlayerStats score(Integer score) {
    this.score = score;
    return this;
  }

 /**
   * Get kills
   * @return kills
  **/
  public Integer getKills() {
    return kills;
  }

  /**
    * Set kills
  **/
  public void setKills(Integer kills) {
    this.kills = kills;
  }

  public PlayerStats kills(Integer kills) {
    this.kills = kills;
    return this;
  }

 /**
   * Get deaths
   * @return deaths
  **/
  public Integer getDeaths() {
    return deaths;
  }

  /**
    * Set deaths
  **/
  public void setDeaths(Integer deaths) {
    this.deaths = deaths;
  }

  public PlayerStats deaths(Integer deaths) {
    this.deaths = deaths;
    return this;
  }

 /**
   * Get assists
   * @return assists
  **/
  public Integer getAssists() {
    return assists;
  }

  /**
    * Set assists
  **/
  public void setAssists(Integer assists) {
    this.assists = assists;
  }

  public PlayerStats assists(Integer assists) {
    this.assists = assists;
    return this;
  }

 /**
   * Get bodyshots
   * @return bodyshots
  **/
  public Integer getBodyshots() {
    return bodyshots;
  }

  /**
    * Set bodyshots
  **/
  public void setBodyshots(Integer bodyshots) {
    this.bodyshots = bodyshots;
  }

  public PlayerStats bodyshots(Integer bodyshots) {
    this.bodyshots = bodyshots;
    return this;
  }

 /**
   * Get headshots
   * @return headshots
  **/
  public Integer getHeadshots() {
    return headshots;
  }

  /**
    * Set headshots
  **/
  public void setHeadshots(Integer headshots) {
    this.headshots = headshots;
  }

  public PlayerStats headshots(Integer headshots) {
    this.headshots = headshots;
    return this;
  }

 /**
   * Get legshots
   * @return legshots
  **/
  public Integer getLegshots() {
    return legshots;
  }

  /**
    * Set legshots
  **/
  public void setLegshots(Integer legshots) {
    this.legshots = legshots;
  }

  public PlayerStats legshots(Integer legshots) {
    this.legshots = legshots;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerStats {\n");
    
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    kills: ").append(toIndentedString(kills)).append("\n");
    sb.append("    deaths: ").append(toIndentedString(deaths)).append("\n");
    sb.append("    assists: ").append(toIndentedString(assists)).append("\n");
    sb.append("    bodyshots: ").append(toIndentedString(bodyshots)).append("\n");
    sb.append("    headshots: ").append(toIndentedString(headshots)).append("\n");
    sb.append("    legshots: ").append(toIndentedString(legshots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

