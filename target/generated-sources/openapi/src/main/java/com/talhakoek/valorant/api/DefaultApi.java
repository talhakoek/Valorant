/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.api;

import com.talhakoek.valorant.model.Affinities;
import java.math.BigDecimal;
import java.io.File;
import com.talhakoek.valorant.model.InlineObject;
import com.talhakoek.valorant.model.InlineResponse200;
import com.talhakoek.valorant.model.InlineResponse2001;
import com.talhakoek.valorant.model.InlineResponse2002;
import com.talhakoek.valorant.model.InlineResponse2003;
import com.talhakoek.valorant.model.InlineResponse2004;
import com.talhakoek.valorant.model.InlineResponse2005;
import com.talhakoek.valorant.model.InlineResponse400;
import com.talhakoek.valorant.model.InlineResponse403;
import com.talhakoek.valorant.model.InlineResponse404;
import com.talhakoek.valorant.model.InlineResponse408;
import com.talhakoek.valorant.model.InlineResponse410;
import com.talhakoek.valorant.model.InlineResponse429;
import com.talhakoek.valorant.model.InlineResponse500;
import com.talhakoek.valorant.model.InlineResponse501;
import com.talhakoek.valorant.model.InlineResponse503;
import com.talhakoek.valorant.model.Maps;
import com.talhakoek.valorant.model.ModesApi;
import com.talhakoek.valorant.model.PremierConferences;
import com.talhakoek.valorant.model.Seasons;
import java.util.UUID;
import com.talhakoek.valorant.model.V1Account;
import com.talhakoek.valorant.model.V1LifetimeMatches;
import com.talhakoek.valorant.model.V1LifetimeMmrHistory;
import com.talhakoek.valorant.model.V1PremierConference;
import com.talhakoek.valorant.model.V1PremierLeaderboard;
import com.talhakoek.valorant.model.V1PremierSearch;
import com.talhakoek.valorant.model.V1PremierSeason;
import com.talhakoek.valorant.model.V1PremierTeam;
import com.talhakoek.valorant.model.V1PremierTeamHistory;
import com.talhakoek.valorant.model.V1QueueStatus;
import com.talhakoek.valorant.model.V1esportschedule;
import com.talhakoek.valorant.model.V1mmr;
import com.talhakoek.valorant.model.V1mmrh;
import com.talhakoek.valorant.model.V1storefeatured;
import com.talhakoek.valorant.model.V2leaderboard;
import com.talhakoek.valorant.model.V2mmr;
import com.talhakoek.valorant.model.V2storefeatured;
import com.talhakoek.valorant.model.V2storeoffers;
import com.talhakoek.valorant.model.V3matches;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.Set;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.core.MediaType;
import org.apache.cxf.jaxrs.ext.multipart.*;

import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;


@RegisterRestClient
@RegisterProvider(ApiExceptionMapper.class)
@Path("/valorant")
public interface DefaultApi  {

    @GET
    @Path("/v1/account/{name}/{tag}")
    @Produces({ "application/json" })
    public V1Account valorantV1AccountNameTagGet(@PathParam("name") String name, @PathParam("tag") String tag, @QueryParam("force") Boolean force) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/by-puuid/account/{puuid}")
    @Produces({ "application/json" })
    public V1Account valorantV1ByPuuidAccountPuuidGet(@PathParam("puuid") String puuid, @QueryParam("force") Boolean force) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/by-puuid/lifetime/matches/{affinity}/{puuid}")
    @Produces({ "application/json" })
    public V1LifetimeMatches valorantV1ByPuuidLifetimeMatchesAffinityPuuidGet(@PathParam("affinity") Affinities affinity, @PathParam("puuid") String puuid, @QueryParam("mode") ModesApi mode, @QueryParam("map") Maps map, @QueryParam("page") Integer page, @QueryParam("size") Integer size) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/by-puuid/lifetime/mmr-history/{region}/{puuid}")
    @Produces({ "application/json" })
    public V1LifetimeMmrHistory valorantV1ByPuuidLifetimeMmrHistoryRegionPuuidGet(@PathParam("region") Affinities region, @PathParam("puuid") String puuid, @QueryParam("page") Integer page, @QueryParam("size") Integer size) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/by-puuid/mmr/{affinity}/{puuid}")
    @Produces({ "application/json" })
    public V1mmr valorantV1ByPuuidMmrAffinityPuuidGet(@PathParam("affinity") Affinities affinity, @PathParam("puuid") String puuid) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/by-puuid/mmr-history/{affinity}/{puuid}")
    @Produces({ "application/json" })
    public V1mmrh valorantV1ByPuuidMmrHistoryAffinityPuuidGet(@PathParam("affinity") Affinities affinity, @PathParam("puuid") String puuid) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/content")
    @Produces({ "application/json" })
    public InlineResponse200 valorantV1ContentGet(@QueryParam("locale") String locale) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/crosshair/generate")
    @Produces({ "application/json", "image/png" })
    public File valorantV1CrosshairGenerateGet(@QueryParam("id") String id) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/esports/schedule")
    @Produces({ "application/json" })
    public V1esportschedule valorantV1EsportsScheduleGet(@QueryParam("region") String region, @QueryParam("league") String league) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/leaderboard/{affinity}")
    @Produces({ "application/json" })
    public List<Object> valorantV1LeaderboardAffinityGet(@PathParam("affinity") Affinities affinity, @QueryParam("puuid") String puuid, @QueryParam("name") String name, @QueryParam("tag") String tag, @QueryParam("season") Seasons season) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/lifetime/matches/{affinity}/{name}/{tag}")
    @Produces({ "application/json" })
    public V1LifetimeMatches valorantV1LifetimeMatchesAffinityNameTagGet(@PathParam("affinity") Affinities affinity, @PathParam("name") String name, @PathParam("tag") String tag, @QueryParam("mode") ModesApi mode, @QueryParam("map") Maps map, @QueryParam("page") Integer page, @QueryParam("size") Integer size) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/lifetime/mmr-history/{affinity}/{name}/{tag}")
    @Produces({ "application/json" })
    public V1LifetimeMmrHistory valorantV1LifetimeMmrHistoryAffinityNameTagGet(@PathParam("affinity") Affinities affinity, @PathParam("name") String name, @PathParam("tag") String tag, @QueryParam("page") Integer page, @QueryParam("size") Integer size) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/mmr/{affinity}/{name}/{tag}")
    @Produces({ "application/json" })
    public V1mmr valorantV1MmrAffinityNameTagGet(@PathParam("name") String name, @PathParam("tag") String tag, @PathParam("affinity") Affinities affinity) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/mmr-history/{affinity}/{name}/{tag}")
    @Produces({ "application/json" })
    public V1mmrh valorantV1MmrHistoryAffinityNameTagGet(@PathParam("name") String name, @PathParam("tag") String tag, @PathParam("affinity") Affinities affinity) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/conferences")
    @Produces({ "application/json" })
    public V1PremierConference valorantV1PremierConferencesGet() throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/leaderboard/{affinity}/{conference}/{division}")
    @Produces({ "application/json" })
    public V1PremierLeaderboard valorantV1PremierLeaderboardAffinityConferenceDivisionGet(@PathParam("affinity") Affinities affinity, @PathParam("conference") PremierConferences conference, @PathParam("division") BigDecimal division) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/leaderboard/{affinity}/{conference}")
    @Produces({ "application/json" })
    public V1PremierLeaderboard valorantV1PremierLeaderboardAffinityConferenceGet(@PathParam("affinity") Affinities affinity, @PathParam("conference") PremierConferences conference) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/leaderboard/{affinity}")
    @Produces({ "application/json" })
    public V1PremierLeaderboard valorantV1PremierLeaderboardAffinityGet(@PathParam("affinity") Affinities affinity) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/search")
    @Produces({ "application/json" })
    public V1PremierSearch valorantV1PremierSearchGet(@QueryParam("name") String name, @QueryParam("tag") String tag, @QueryParam("division") BigDecimal division, @QueryParam("conference") PremierConferences conference) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/seasons/{affinity}")
    @Produces({ "application/json" })
    public V1PremierSeason valorantV1PremierSeasonsAffinityGet(@PathParam("affinity") Affinities affinity) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/{team_id}")
    @Produces({ "application/json" })
    public V1PremierTeam valorantV1PremierTeamIdGet(@PathParam("team_id") UUID teamId) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/{team_id}/history")
    @Produces({ "application/json" })
    public V1PremierTeamHistory valorantV1PremierTeamIdHistoryGet(@PathParam("team_id") UUID teamId) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/{team_name}/{team_tag}")
    @Produces({ "application/json" })
    public V1PremierTeam valorantV1PremierTeamNameTeamTagGet(@PathParam("team_name") String teamName, @PathParam("team_tag") String teamTag) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/premier/{team_name}/{team_tag}/history")
    @Produces({ "application/json" })
    public V1PremierTeamHistory valorantV1PremierTeamNameTeamTagHistoryGet(@PathParam("team_name") String teamName, @PathParam("team_tag") String teamTag) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/queue-status/{affinity}")
    @Produces({ "application/json" })
    public V1QueueStatus valorantV1QueueStatusAffinityGet(@PathParam("affinity") Affinities affinity) throws ApiException, ProcessingException;

    @POST
    @Path("/v1/raw")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    public void valorantV1RawPost(InlineObject inlineObject) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/status/{affinity}")
    @Produces({ "application/json" })
    public InlineResponse2003 valorantV1StatusAffinityGet(@PathParam("affinity") Affinities affinity) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/store-featured")
    @Produces({ "application/json" })
    public V1storefeatured valorantV1StoreFeaturedGet() throws ApiException, ProcessingException;

    @GET
    @Path("/v1/store-offers")
    @Produces({ "application/json" })
    public Object valorantV1StoreOffersGet() throws ApiException, ProcessingException;

    @GET
    @Path("/v1/version/{affinity}")
    @Produces({ "application/json" })
    public InlineResponse2004 valorantV1VersionAffinityGet(@PathParam("affinity") Affinities affinity) throws ApiException, ProcessingException;

    @GET
    @Path("/v1/website/{countryCode}")
    @Produces({ "application/json" })
    public InlineResponse2005 valorantV1WebsiteCountryCodeGet(@PathParam("countryCode") String countryCode) throws ApiException, ProcessingException;

    @GET
    @Path("/v2/by-puuid/mmr/{affinity}/{puuid}")
    @Produces({ "application/json" })
    public V2mmr valorantV2ByPuuidMmrAffinityPuuidGet(@PathParam("affinity") Affinities affinity, @PathParam("puuid") String puuid, @QueryParam("season") Seasons season) throws ApiException, ProcessingException;

    @GET
    @Path("/v2/leaderboard/{affinity}")
    @Produces({ "application/json" })
    public V2leaderboard valorantV2LeaderboardAffinityGet(@PathParam("affinity") Affinities affinity, @QueryParam("puuid") String puuid, @QueryParam("name") String name, @QueryParam("tag") String tag, @QueryParam("season") Seasons season) throws ApiException, ProcessingException;

    @GET
    @Path("/v2/match/{matchId}")
    @Produces({ "application/json" })
    public InlineResponse2002 valorantV2MatchMatchIdGet(@PathParam("matchId") UUID matchId) throws ApiException, ProcessingException;

    @GET
    @Path("/v2/mmr/{affinity}/{name}/{tag}")
    @Produces({ "application/json" })
    public V2mmr valorantV2MmrAffinityNameTagGet(@PathParam("name") String name, @PathParam("tag") String tag, @PathParam("affinity") Affinities affinity, @QueryParam("season") Seasons season) throws ApiException, ProcessingException;

    @GET
    @Path("/v2/store-featured")
    @Produces({ "application/json" })
    public V2storefeatured valorantV2StoreFeaturedGet() throws ApiException, ProcessingException;

    @GET
    @Path("/v2/store-offers")
    @Produces({ "application/json" })
    public V2storeoffers valorantV2StoreOffersGet() throws ApiException, ProcessingException;

    @GET
    @Path("/v3/by-puuid/matches/{affinity}/{puuid}")
    @Produces({ "application/json" })
    public V3matches valorantV3ByPuuidMatchesAffinityPuuidGet(@PathParam("affinity") Affinities affinity, @PathParam("puuid") String puuid, @QueryParam("mode") ModesApi mode, @QueryParam("map") Maps map, @QueryParam("size") Integer size) throws ApiException, ProcessingException;

    @GET
    @Path("/v3/matches/{affinity}/{name}/{tag}")
    @Produces({ "application/json" })
    public InlineResponse2001 valorantV3MatchesAffinityNameTagGet(@PathParam("name") String name, @PathParam("tag") String tag, @PathParam("affinity") Affinities affinity) throws ApiException, ProcessingException;
}
