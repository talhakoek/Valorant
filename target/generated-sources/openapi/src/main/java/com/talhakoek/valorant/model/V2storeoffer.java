/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.model;

import com.talhakoek.valorant.model.V2storeofferContentTier;

import java.lang.reflect.Type;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;
import jakarta.json.bind.annotation.JsonbProperty;


public class V2storeoffer  {
  
  @JsonbProperty("offer_id")
  private String offerId;

  @JsonbProperty("cost")
  private Integer cost;

  @JsonbProperty("name")
  private String name;

  @JsonbProperty("icon")
  private String icon;

  @JsonbTypeSerializer(TypeEnum.Serializer.class)
  @JsonbTypeDeserializer(TypeEnum.Deserializer.class)
  public enum TypeEnum {

    SKIN_LEVEL(String.valueOf("skin_level")), SKIN_CHROMA(String.valueOf("skin_chroma")), BUDDY(String.valueOf("buddy")), SPRAY(String.valueOf("spray")), PLAYER_CARD(String.valueOf("player_card")), PLAYER_TITLE(String.valueOf("player_title"));


    String value;

    TypeEnum (String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static final class Deserializer implements JsonbDeserializer<TypeEnum> {
        @Override
        public TypeEnum deserialize(JsonParser parser, DeserializationContext ctx, Type rtType) {
            for (TypeEnum b : TypeEnum.values()) {
                if (String.valueOf(b.value).equals(parser.getString())) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + parser.getString() + "'");
        }
    }

    public static final class Serializer implements JsonbSerializer<TypeEnum> {
        @Override
        public void serialize(TypeEnum obj, JsonGenerator generator, SerializationContext ctx) {
            generator.write(obj.value);
        }
    }
  }

  @JsonbProperty("type")
  private TypeEnum type;

  @JsonbProperty("skin_id")
  private String skinId;

  @JsonbProperty("content_tier")
  private V2storeofferContentTier contentTier;

 /**
   * Get offerId
   * @return offerId
  **/
  public String getOfferId() {
    return offerId;
  }

  /**
    * Set offerId
  **/
  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }

  public V2storeoffer offerId(String offerId) {
    this.offerId = offerId;
    return this;
  }

 /**
   * Get cost
   * @return cost
  **/
  public Integer getCost() {
    return cost;
  }

  /**
    * Set cost
  **/
  public void setCost(Integer cost) {
    this.cost = cost;
  }

  public V2storeoffer cost(Integer cost) {
    this.cost = cost;
    return this;
  }

 /**
   * Get name
   * @return name
  **/
  public String getName() {
    return name;
  }

  /**
    * Set name
  **/
  public void setName(String name) {
    this.name = name;
  }

  public V2storeoffer name(String name) {
    this.name = name;
    return this;
  }

 /**
   * Get icon
   * @return icon
  **/
  public String getIcon() {
    return icon;
  }

  /**
    * Set icon
  **/
  public void setIcon(String icon) {
    this.icon = icon;
  }

  public V2storeoffer icon(String icon) {
    this.icon = icon;
    return this;
  }

 /**
   * Get type
   * @return type
  **/
  public TypeEnum getType() {
    return type;
  }

  /**
    * Set type
  **/
  public void setType(TypeEnum type) {
    this.type = type;
  }

  public V2storeoffer type(TypeEnum type) {
    this.type = type;
    return this;
  }

 /**
   * Get skinId
   * @return skinId
  **/
  public String getSkinId() {
    return skinId;
  }

  /**
    * Set skinId
  **/
  public void setSkinId(String skinId) {
    this.skinId = skinId;
  }

  public V2storeoffer skinId(String skinId) {
    this.skinId = skinId;
    return this;
  }

 /**
   * Get contentTier
   * @return contentTier
  **/
  public V2storeofferContentTier getContentTier() {
    return contentTier;
  }

  /**
    * Set contentTier
  **/
  public void setContentTier(V2storeofferContentTier contentTier) {
    this.contentTier = contentTier;
  }

  public V2storeoffer contentTier(V2storeofferContentTier contentTier) {
    this.contentTier = contentTier;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V2storeoffer {\n");
    
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    skinId: ").append(toIndentedString(skinId)).append("\n");
    sb.append("    contentTier: ").append(toIndentedString(contentTier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

