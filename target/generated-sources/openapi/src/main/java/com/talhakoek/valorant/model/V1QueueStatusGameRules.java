/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.model;


import java.lang.reflect.Type;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;
import jakarta.json.bind.annotation.JsonbProperty;


public class V1QueueStatusGameRules  {
  
  @JsonbProperty("overtime_win_by_two")
  private Boolean overtimeWinByTwo;

  @JsonbProperty("allow_lenient_surrender")
  private Boolean allowLenientSurrender;

  @JsonbProperty("allow_drop_out")
  private Boolean allowDropOut;

  @JsonbProperty("assign_random_agents")
  private Boolean assignRandomAgents;

  @JsonbProperty("skip_pregame")
  private Boolean skipPregame;

  @JsonbProperty("allow_overtime_draw_vote")
  private Boolean allowOvertimeDrawVote;

  @JsonbProperty("overtime_win_by_two_capped")
  private Boolean overtimeWinByTwoCapped;

  @JsonbProperty("premier_mode")
  private Boolean premierMode;

 /**
   * Get overtimeWinByTwo
   * @return overtimeWinByTwo
  **/
  public Boolean getOvertimeWinByTwo() {
    return overtimeWinByTwo;
  }

  /**
    * Set overtimeWinByTwo
  **/
  public void setOvertimeWinByTwo(Boolean overtimeWinByTwo) {
    this.overtimeWinByTwo = overtimeWinByTwo;
  }

  public V1QueueStatusGameRules overtimeWinByTwo(Boolean overtimeWinByTwo) {
    this.overtimeWinByTwo = overtimeWinByTwo;
    return this;
  }

 /**
   * Get allowLenientSurrender
   * @return allowLenientSurrender
  **/
  public Boolean getAllowLenientSurrender() {
    return allowLenientSurrender;
  }

  /**
    * Set allowLenientSurrender
  **/
  public void setAllowLenientSurrender(Boolean allowLenientSurrender) {
    this.allowLenientSurrender = allowLenientSurrender;
  }

  public V1QueueStatusGameRules allowLenientSurrender(Boolean allowLenientSurrender) {
    this.allowLenientSurrender = allowLenientSurrender;
    return this;
  }

 /**
   * Get allowDropOut
   * @return allowDropOut
  **/
  public Boolean getAllowDropOut() {
    return allowDropOut;
  }

  /**
    * Set allowDropOut
  **/
  public void setAllowDropOut(Boolean allowDropOut) {
    this.allowDropOut = allowDropOut;
  }

  public V1QueueStatusGameRules allowDropOut(Boolean allowDropOut) {
    this.allowDropOut = allowDropOut;
    return this;
  }

 /**
   * Get assignRandomAgents
   * @return assignRandomAgents
  **/
  public Boolean getAssignRandomAgents() {
    return assignRandomAgents;
  }

  /**
    * Set assignRandomAgents
  **/
  public void setAssignRandomAgents(Boolean assignRandomAgents) {
    this.assignRandomAgents = assignRandomAgents;
  }

  public V1QueueStatusGameRules assignRandomAgents(Boolean assignRandomAgents) {
    this.assignRandomAgents = assignRandomAgents;
    return this;
  }

 /**
   * Get skipPregame
   * @return skipPregame
  **/
  public Boolean getSkipPregame() {
    return skipPregame;
  }

  /**
    * Set skipPregame
  **/
  public void setSkipPregame(Boolean skipPregame) {
    this.skipPregame = skipPregame;
  }

  public V1QueueStatusGameRules skipPregame(Boolean skipPregame) {
    this.skipPregame = skipPregame;
    return this;
  }

 /**
   * Get allowOvertimeDrawVote
   * @return allowOvertimeDrawVote
  **/
  public Boolean getAllowOvertimeDrawVote() {
    return allowOvertimeDrawVote;
  }

  /**
    * Set allowOvertimeDrawVote
  **/
  public void setAllowOvertimeDrawVote(Boolean allowOvertimeDrawVote) {
    this.allowOvertimeDrawVote = allowOvertimeDrawVote;
  }

  public V1QueueStatusGameRules allowOvertimeDrawVote(Boolean allowOvertimeDrawVote) {
    this.allowOvertimeDrawVote = allowOvertimeDrawVote;
    return this;
  }

 /**
   * Get overtimeWinByTwoCapped
   * @return overtimeWinByTwoCapped
  **/
  public Boolean getOvertimeWinByTwoCapped() {
    return overtimeWinByTwoCapped;
  }

  /**
    * Set overtimeWinByTwoCapped
  **/
  public void setOvertimeWinByTwoCapped(Boolean overtimeWinByTwoCapped) {
    this.overtimeWinByTwoCapped = overtimeWinByTwoCapped;
  }

  public V1QueueStatusGameRules overtimeWinByTwoCapped(Boolean overtimeWinByTwoCapped) {
    this.overtimeWinByTwoCapped = overtimeWinByTwoCapped;
    return this;
  }

 /**
   * Get premierMode
   * @return premierMode
  **/
  public Boolean getPremierMode() {
    return premierMode;
  }

  /**
    * Set premierMode
  **/
  public void setPremierMode(Boolean premierMode) {
    this.premierMode = premierMode;
  }

  public V1QueueStatusGameRules premierMode(Boolean premierMode) {
    this.premierMode = premierMode;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1QueueStatusGameRules {\n");
    
    sb.append("    overtimeWinByTwo: ").append(toIndentedString(overtimeWinByTwo)).append("\n");
    sb.append("    allowLenientSurrender: ").append(toIndentedString(allowLenientSurrender)).append("\n");
    sb.append("    allowDropOut: ").append(toIndentedString(allowDropOut)).append("\n");
    sb.append("    assignRandomAgents: ").append(toIndentedString(assignRandomAgents)).append("\n");
    sb.append("    skipPregame: ").append(toIndentedString(skipPregame)).append("\n");
    sb.append("    allowOvertimeDrawVote: ").append(toIndentedString(allowOvertimeDrawVote)).append("\n");
    sb.append("    overtimeWinByTwoCapped: ").append(toIndentedString(overtimeWinByTwoCapped)).append("\n");
    sb.append("    premierMode: ").append(toIndentedString(premierMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

