/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.talhakoek.valorant.model;

import java.util.ArrayList;
import java.util.List;

import java.lang.reflect.Type;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;
import jakarta.json.bind.annotation.JsonbProperty;


public class V2leaderboard  {
  
  @JsonbProperty("last_update")
  private Integer lastUpdate;

  @JsonbProperty("next_update")
  private Integer nextUpdate;

  @JsonbProperty("total_players")
  private Integer totalPlayers;

  @JsonbProperty("radiant_threshold")
  private Integer radiantThreshold;

  @JsonbProperty("immortal_3_threshold")
  private Integer immortal3Threshold;

  @JsonbProperty("immortal_2_threshold")
  private Integer immortal2Threshold;

  @JsonbProperty("immortal_1_threshold")
  private Integer immortal1Threshold;

  @JsonbProperty("players")
  private List<Object> players = null;

 /**
   * Get lastUpdate
   * @return lastUpdate
  **/
  public Integer getLastUpdate() {
    return lastUpdate;
  }

  /**
    * Set lastUpdate
  **/
  public void setLastUpdate(Integer lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public V2leaderboard lastUpdate(Integer lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

 /**
   * Get nextUpdate
   * @return nextUpdate
  **/
  public Integer getNextUpdate() {
    return nextUpdate;
  }

  /**
    * Set nextUpdate
  **/
  public void setNextUpdate(Integer nextUpdate) {
    this.nextUpdate = nextUpdate;
  }

  public V2leaderboard nextUpdate(Integer nextUpdate) {
    this.nextUpdate = nextUpdate;
    return this;
  }

 /**
   * Get totalPlayers
   * @return totalPlayers
  **/
  public Integer getTotalPlayers() {
    return totalPlayers;
  }

  /**
    * Set totalPlayers
  **/
  public void setTotalPlayers(Integer totalPlayers) {
    this.totalPlayers = totalPlayers;
  }

  public V2leaderboard totalPlayers(Integer totalPlayers) {
    this.totalPlayers = totalPlayers;
    return this;
  }

 /**
   * Get radiantThreshold
   * @return radiantThreshold
  **/
  public Integer getRadiantThreshold() {
    return radiantThreshold;
  }

  /**
    * Set radiantThreshold
  **/
  public void setRadiantThreshold(Integer radiantThreshold) {
    this.radiantThreshold = radiantThreshold;
  }

  public V2leaderboard radiantThreshold(Integer radiantThreshold) {
    this.radiantThreshold = radiantThreshold;
    return this;
  }

 /**
   * Get immortal3Threshold
   * @return immortal3Threshold
  **/
  public Integer getImmortal3Threshold() {
    return immortal3Threshold;
  }

  /**
    * Set immortal3Threshold
  **/
  public void setImmortal3Threshold(Integer immortal3Threshold) {
    this.immortal3Threshold = immortal3Threshold;
  }

  public V2leaderboard immortal3Threshold(Integer immortal3Threshold) {
    this.immortal3Threshold = immortal3Threshold;
    return this;
  }

 /**
   * Get immortal2Threshold
   * @return immortal2Threshold
  **/
  public Integer getImmortal2Threshold() {
    return immortal2Threshold;
  }

  /**
    * Set immortal2Threshold
  **/
  public void setImmortal2Threshold(Integer immortal2Threshold) {
    this.immortal2Threshold = immortal2Threshold;
  }

  public V2leaderboard immortal2Threshold(Integer immortal2Threshold) {
    this.immortal2Threshold = immortal2Threshold;
    return this;
  }

 /**
   * Get immortal1Threshold
   * @return immortal1Threshold
  **/
  public Integer getImmortal1Threshold() {
    return immortal1Threshold;
  }

  /**
    * Set immortal1Threshold
  **/
  public void setImmortal1Threshold(Integer immortal1Threshold) {
    this.immortal1Threshold = immortal1Threshold;
  }

  public V2leaderboard immortal1Threshold(Integer immortal1Threshold) {
    this.immortal1Threshold = immortal1Threshold;
    return this;
  }

 /**
   * Get players
   * @return players
  **/
  public List<Object> getPlayers() {
    return players;
  }

  /**
    * Set players
  **/
  public void setPlayers(List<Object> players) {
    this.players = players;
  }

  public V2leaderboard players(List<Object> players) {
    this.players = players;
    return this;
  }

  public V2leaderboard addPlayersItem(Object playersItem) {
    this.players.add(playersItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V2leaderboard {\n");
    
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    nextUpdate: ").append(toIndentedString(nextUpdate)).append("\n");
    sb.append("    totalPlayers: ").append(toIndentedString(totalPlayers)).append("\n");
    sb.append("    radiantThreshold: ").append(toIndentedString(radiantThreshold)).append("\n");
    sb.append("    immortal3Threshold: ").append(toIndentedString(immortal3Threshold)).append("\n");
    sb.append("    immortal2Threshold: ").append(toIndentedString(immortal2Threshold)).append("\n");
    sb.append("    immortal1Threshold: ").append(toIndentedString(immortal1Threshold)).append("\n");
    sb.append("    players: ").append(toIndentedString(players)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

